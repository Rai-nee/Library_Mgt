<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QDaRXhpZgAATU0AKgAAAAgAAwE7AAIAAAAVAAAAModpAAQAAAAB
        AAAASJydAAEAAAAqAAAAqAAAAABHb2xpYmUgTG9ycmFpbmUgRGlrZQAAAASQAwACAAAAFAAAAH6QBAAC
        AAAAFAAAAJKSkQACAAAAAzYzAACSkgACAAAAAzYzAAAAAAAAMjAyMjowODoyMCAwMjo0MjoxMQAyMDIy
        OjA4OjIwIDAyOjQyOjExAAAARwBvAGwAaQBiAGUAIABMAG8AcgByAGEAaQBuAGUAIABEAGkAawBlAAAA
        /9sAQwAHBQUGBQQHBgUGCAcHCAoRCwoJCQoVDxAMERgVGhkYFRgXGx4nIRsdJR0XGCIuIiUoKSssKxog
        LzMvKjInKisq/9sAQwEHCAgKCQoUCwsUKhwYHCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
        KioqKioqKioqKioqKioqKioq/8AAEQgAgQCLAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAAB
        AgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEV
        UtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6
        g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn
        6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQH
        BQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1
        Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWm
        p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMR
        AD8A+kaKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKyPE/ifTfC
        OhS6rrEpSCP5VVRlpGPRVHcmtevAv2lLq4+16DaZIttksmOzPlR+g/nTiuaSj3BuycuxTv8A9pHWnvSd
        L0WwhtQeFuS8jkfVSoH5GvR/hz8W9N8dytYTW50/VUUv5BfcsqjqUbA59QR+fNfKNb/gW6uLPx/oU1mS
        JRfwqMdwzhSPxBI/GvR9hBqyRxOrNan2jRRRXmnaFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFcZ8TPAM
        fj7w4ttHKsF/asZLWZx8oJGCrex4+mAfauxlljgheWZ1jjjUs7scBQOpJrxLxZ+0RFaXclr4R0+O7EZx
        9suywRv91Bgke5I+lVGMpO0dxNqKuzym/wDhj40069NtN4cv5WzgPbQmZD77kyPzr1P4SfBzUdJ1qHxD
        4riW3kt/mtbPcGYP2d8cDHYdc9cY55n/AIaK8X/8+Wj/APfiT/45VzTP2j9diuwdY0jT7m37rbb4nHuC
        WYfhj8a7n7Zq2hyWpXPoyisPwn4u0nxnoq6losxZM7ZYnGHhb+6w/wAg1uVwNOLszrTTV0FFFFIYUUUU
        AFFFFABRRRQAUUUUAFFFFAHkn7QniKfS/B9ppVrIY21OYiUg8mNACR+JK/lXzVX2T418AaN48s7eDWvt
        EbWzFoprZwrrnGRyCMHA7dq4z/hnLwj/ANBHWv8Av/F/8arpoVIwi77mNWEptWPmmivpb/hnLwj/ANBH
        Wv8Av/F/8ao/4Zy8I/8AQR1r/v8Axf8Axquj6xAx9jI8p+C3iGfQ/iTYwLIRbakfss6Z4bP3D9Q2PzPr
        X1hXnPh34H+FvDevW2rW82o3U9q2+JLqZCit2bCopJH1r0auavUjNpo2pQlG9wooornNgooooAKKKKAC
        iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACig8Csa111riy0Scw
        BTqbYYbv9X+6Z+PX7uPxoA2aK5uz8Vs9nfXd/DBDHZxNJLAkxM8WOiuhUdR3zj69aZpPi9dQ1GO1b7HI
        00TSL9kuDIYyoztfKjt3HcYp2YHT0VmaBqF7qulxX17aw2yXEayRJHKXOCM/N8ox9BmtOhqzswCiiikA
        UUUUAFFFFABRRRQAUUUUAFFFFABWPaeG4LS4hYXd1LBbFjbWzsuyAsCPlIUMcAkDJOAa2KKAMaLwzb+b
        I99d3WoB7drVVuWU7Y2IJXKqCc4HLEnjrU9npMlrJmXVL67QIY0jnZMKD3+VQWPHVia0qKd7gV7Czj07
        TbeyhLNHbxLEpc8kKMDP5VYoopPXUAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoo
        ooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD//2Q==
</value>
  </data>
</root>